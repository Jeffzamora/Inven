# Generated by Django 4.0.2 on 2022-02-09 23:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mrd', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cargo', models.CharField(max_length=12, verbose_name='Cargo')),
                ('telefono', models.CharField(max_length=8, verbose_name='Telefono')),
                ('exten', models.CharField(blank=True, max_length=4, null=True, verbose_name='Ext del telefono')),
                ('celular', models.CharField(max_length=8, verbose_name='Celular')),
                ('Comp', models.CharField(choices=[['TIGO', 'Tigo'], ['CLARO', 'Claro']], max_length=5, verbose_name='Compa√±ia')),
                ('direccion', models.CharField(max_length=50, verbose_name='Direccion Donde habita')),
                ('Area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrd.area', verbose_name='Area')),
                ('Proceso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrd.proceso', verbose_name='Proceso')),
                ('Sede', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='mrd.sede', verbose_name='Sede')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_groups', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_permissions', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
